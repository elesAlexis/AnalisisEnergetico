#Se importa las librer√≠a que se van usar en la limpieza 
import pandas as pd

def load_and_clean_data(filepath):
    print("üì• Leyendo el archivo:", filepath)
    df = pd.read_csv(filepath, sep=',')

    # Validar a√±os √∫nicos
    print("\nüìÜ A√ëOS DISPONIBLES")
    print("-" * 40)
    print(df['YEAR'].unique())

    # Validar valores nulos
    print("\nüßº VALORES NULOS POR COLUMNA")
    print("-" * 40)
    print(df.isnull().sum())

    # Renombrar columnas
    df = df.rename(columns={
        "COUNTRY": "PAIS",
        "YEAR": "ANIO",
        "MONTH": "MES",
        "PRODUCT": "PRODUCTO",
        "VALUE": "ELECTRICIDAD_GENERADA_GWH",
        "yearToDate": "ELECTRICIDAD_GENERADA_ACUMULADA"
    })

    # Traducir PRODUCTOS
    traducciones_productos = {
        'Hydro': 'Hidroel√©ctrica',
        'Wind': 'E√≥lica',
        'Solar': 'Solar',
        'Geothermal': 'Geot√©rmica',
        'Other renewables': 'Otras renovables',
        'Nuclear': 'Nuclear',
        'Total combustible fuels': 'Total combustibles',
        'Coal': 'Carb√≥n',
        'Oil': 'Petr√≥leo',
        'Natural gas': 'Gas natural',
        'Combustible renewables': 'Renovables combustibles',
        'Other combustible non-renewables': 'Otros no renovables combustibles',
        'Not specified': 'No especificado',
        'Net electricity production': 'Producci√≥n neta de electricidad',
        'Total imports': 'Importaciones totales',
        'Total exports': 'Exportaciones totales',
        'Electricity supplied': 'Electricidad suministrada',
        'Used for pumped storage': 'Usado para almacenamiento por bombeo',
        'Distribution losses': 'P√©rdidas de distribuci√≥n',
        'Final consumption': 'Consumo final',
        'Electricity trade': 'Intercambio de electricidad',
        'Renewables': 'Renovables',
        'Non-renewables': 'No renovables',
        'Others': 'Otros',
        'Other renewables aggregated': 'Otras renovables agregadas',
        'Low carbon': 'Bajo carbono',
        'Fossil fuels': 'Combustibles f√≥siles'
    }
    df['PRODUCTO'] = df['PRODUCTO'].replace(traducciones_productos)

    # Mostrar productos √∫nicos
    print("\nüîã TIPOS DE PRODUCTOS ENERG√âTICOS")
    print("-" * 40)
    print(df['PRODUCTO'].unique())

    # Traducir PA√çSES
    traducciones_paises = {
        'Argentina': 'Argentina',
        'Brazil': 'Brasil',
        'Canada': 'Canad√°',
        'Chile': 'Chile',
        'Colombia': 'Colombia',
        'Mexico': 'M√©xico',
        'United States': 'Estados Unidos',
        'Costa Rica': 'Costa Rica'
    }
    df['PAIS'] = df['PAIS'].replace(traducciones_paises)

    # Mostrar pa√≠ses √∫nicos
    print("\nüåç PA√çSES EN EL DATASET")
    print("-" * 40)
    print(df['PAIS'].unique())

    # Info general del DataFrame
    print("\nüìä INFORMACI√ìN DEL DATASET")
    print("-" * 40)
    print(df.info())

    # Resumen estad√≠stico
    print("\nüìà ESTAD√çSTICAS DESCRIPTIVAS")
    print("-" * 40)
    print(df.describe())

    return df
